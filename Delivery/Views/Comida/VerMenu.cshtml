@using Delivery.Domain.Food
@model IEnumerable<Comida>
@{
    var listaCategoria = Enum.GetValues(typeof(CategoriaComida)).Cast<CategoriaComida>().ToList();
}
<body>

    <!--Pedidos-->
    <div id="contenedorPedidosCliente">
        @await Html.PartialAsync("_VerComidasPedido", Enumerable.Empty<Comida_CaracteristicaPedido>());
    </div>

    <!--Body-->
    <div class="container mt-3">
        <h1>Menú del día</h1>
        <div class="row container">
            <div class="row mb-3">
                <div class="col">
                    <select class="form-select">
                        <option disable selected hidden>Todo</option>
                        @foreach (CategoriaComida item in listaCategoria)
                        {
                            <option value="@Convert.ToInt32(item)">@item.ToString()</option>
                        }
                    </select>
                </div>
                <div class="col input-group">
                    <input type="text" class="form-control" placeholder="Busqueda por nombre...">
                    <button class="btn btn-light">Buscar</button>
                </div>
            </div>

            <div class="row">
                <div class="col">


                    <button class="btn btn-primary" id="VerComidasDelPedido" data-bs-toggle="offcanvas" href="#MostrarPedidos">
                        Ver comidas registrados
                    </button>

                </div>
            </div>

            @if (Model.Count() > 0)
            {
                <div class="row">
                    @foreach (Comida item in Model)
                    {
                        <div class="col-sm-6 mt-3">
                            <div style="border-radius: 50px;" class="card">
                                <svg style="border-top-left-radius: 50px; border-top-right-radius: 50px;" class="bd-placeholder-img" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder" preserveAspectRatio="xMidYMid meet" focusable="false">
                                    <defs>
                                        <pattern id="imagen+@item.ID" width="100%" height="100%">
                                            <image x="0" y="-50" width="100%" xlink:href="/imagenes/Comida/@item.Imagen" />
                                        </pattern>
                                    </defs>
                                    <rect width="100%" height="100%" fill="url(#imagen+@item.ID)" />
                                </svg>

                                <div class="card-body">
                                    <h5 class="card-title">
                                        @item.Nombre
                                    </h5>

                                    <div class="mb-4 overflow-auto" style="height:90px">
                                        <p class="card-text" style="text-align: justify">
                                            @item.Descripcion
                                        </p>
                                    </div>

                                    <div class="row">
                                        <div class="col-9">
                                            <div class="input-group mb-3">
                                                @*Pedir*@
                                                <button type="button" data-id="@item.ID" class="btn btn-success pedir">Pedir</button>
                                            </div>
                                            <p class="form-text">Solo quedan @item.Stock platos disponibles</p>
                                        </div>
                                        <div class="col mb-3">
                                            <div class="alert alert-success" role="alert">
                                                <p style="text-align: center; height: 5px;">S/. @item.Precio</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-primary mt-5" role="alert">
                    No se encontraron platos disponibles
                </div>
            }

        </div>
    </div>

    <br>
    <br>


    <!--navi-->
    <div class="container" style="width: 300px;">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item"><a class="page-link" href="#">Previous</a></li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item"><a class="page-link" href="#">Next</a></li>
            </ul>
        </nav>
    </div>
    
    <div id="contenedorElegirCaracteristica">
        @await Html.PartialAsync("_ElegirCaracComida", new Comida());
    </div>

</body>

@section Scripts{
    <script>

        var listadoComidasPedir = {};

        //Vista parcial para elegir caracteristicas
        $('.btn.btn-success.pedir').click(function(){
            let idcomida = $(this).data("id");
            let listacaracteristicas = [];

            $.ajax({
                type: 'GET',
                url: '/Comida/_ElegirCaracComida',
                data: { id: idcomida },
                dataType: 'html',
                async: true,
                success: function (result) {

                    $('#contenedorElegirCaracteristica').html(result);
                    $('#elegirCaracteristicaComida').modal('show');

                    //Agregar caracteristica
                    $('#Agregarcaracteristica').on('click', function () {

                        let seleccion = $('#SeleccionarCaracteristicas').val();
                        if (seleccion == null) {
                            $('#validacionCaracteristicas').text('Necesita marcar una de las opciones');
                            setTimeout(function () {
                                $("#validacionCaracteristicas").fadeOut();
                            }, 1500);
                            setTimeout(function () {
                                // Mostrar el elemento nuevamente
                                $('#validacionCaracteristicas').text('');
                                $("#validacionCaracteristicas").fadeIn();
                            }, 1500);
                        }
                        else {
                            let listado = $('#listadoCaracteristicas').find("li");
                            $('#validacionCaracteristicas').text('');

                            let valor = $('#SeleccionarCaracteristicas').find("option:selected").html();
                            let valorRepetido = false;

                            listacaracteristicas.forEach((x) => {
                                if (x == seleccion) valorRepetido = true;
                            });

                            if (!valorRepetido) {
                                let li = $('<li class="list-group-item border d-flex">  <p class="p-0 m-0 flex-grow-1 overflow-auto">' + valor + '</p> </li>');
                                let buttonclose = $('<button type="button" class="btn-close quitar" data-id="' + seleccion + '" ></button>');

                                //Close button action
                                buttonclose.on('click', function () {
                                    let borrar = $(this).closest('li').find('button').data('id');
                                    listacaracteristicas = listacaracteristicas.filter(x => x != borrar);
                                    $(this).closest('li').remove();

                                });

                                li.append(buttonclose);
                                $('#listadoCaracteristicas').append(li);

                                listacaracteristicas.push(parseInt(seleccion));

                            }
                            else {
                                $('#validacionCaracteristicas').text('Esta característica ya ha sido registrada');
                                setTimeout(function () {
                                    $("#validacionCaracteristicas").fadeOut();
                                }, 1500);
                                setTimeout(function () {
                                    // Mostrar el elemento nuevamente
                                    $('#validacionCaracteristicas').text('');
                                    $("#validacionCaracteristicas").fadeIn();
                                }, 1500);
                            }
                        }
                    });

                    $('#guardarpedido').on('click', function () {

                        if (!listadoComidasPedir[idcomida]) {
                            listadoComidasPedir[idcomida] = [listacaracteristicas];
                        }
                        else{
                            listadoComidasPedir[idcomida].push(listacaracteristicas)
                        }
                        console.log(listadoComidasPedir);
                    });
                }
            });
        });


        //Vista parcial para ver el estado del pedido
        $('#VerComidasDelPedido').click(function () {

            //let listadoJSON = JSON.stringify(listadoComidasPedir)

            $.ajax({
                type: 'GET',
                url: '/Comida/_VerComidasPedido',
                dataType: 'html',
                async: true,
                success: function (result) {
                    let contenedor = $('#divpedidosregistrados');

                    if (!(Object.keys(listadoComidasPedir).length === 0)) {
                        let accordioninit = $(`
                            <div class="accordion accordion-flush"> 
                                <div class="accordion-item overflow-auto"></div>
                            </div>
                        `);

                        let tituloAccordion = "";
                        let contenedorCaracteristicas = "";
                        let accordeonUL = "";
                        let accordeonLI = "";
                    }
                    //No se ha pedido nada
                    else{
                        contenedor.html($(
                            `<div class="alert alert-primary" role="alert">
                                Aún no ha pedido platos por el momento
                            </div>`
                        ));
                    }
                    
                }

            });
        });
       

    </script>
}