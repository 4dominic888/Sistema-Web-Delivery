@using Delivery.Domain.Food;
@model IEnumerable<Comida>
@{
    ViewBag.CaracteristicasComida = Enum.GetValues(typeof(CategoriaComida)).Cast<CategoriaComida>().ToList();
    var listaCategorias = ViewBag.CaracteristicasComida;
    //Cambiar cuando se edite la comida
}

<!--Body-->
<div class="container mt-3">
    <h1>Menú del día</h1>
    <div class="row container">

        @*Cabecera*@
        <div class="row mb-3">
            <div class="col">
                <select class="form-select">
                    <option disable selected hidden>Todo</option>
                    @foreach(CategoriaComida item in listaCategorias)
                    {
                        <option value="@Convert.ToInt32(item)">@item.ToString()</option>
                    }
                </select>
            </div>
            <div class="col input-group">
                <input type="text" class="form-control" placeholder="Busqueda por nombre...">
                <button class="btn btn-light">Buscar</button>
            </div>
        </div>

        @*Agregar Característica de comida*@
        <div class="row">
            <div class="col">
                <button id="Create" class="btn btn-success">Agregar comida</button>
                <a class="btn btn-secondary" asp-action="CaracteristicaComida">Agregar Característica de comida</a>
            </div>
        </div>

        @*Aplicar Foreach*@
        @if (Model.Count() > 0){
            <div id="listacomidas" class="row">
            @foreach (Comida item in Model){
                <div class="col-sm-6 mt-3">
                    <div style="border-radius: 50px" class="card">
                        <svg style="border-top-left-radius: 50px; border-top-right-radius: 50px;" class="bd-placeholder-img" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder" preserveAspectRatio="xMidYMid meet" focusable="false">
                            <defs>
                                <pattern id="imagen+@item.ID" width="100%" height="100%">
                                    <image x="0" y="-50" width="100%" xlink:href="/imagenes/Comida/@item.Imagen" />
                                </pattern>
                            </defs>
                            <rect width="100%" height="100%" fill="url(#imagen+@item.ID)" />
                        </svg>
                        <div class="card-body overflow-y-auto">
                            <h5 class="card-title">
                                @item.Nombre
                            </h5>

                            <div class="mb-4 overflow-auto" style="height:90px">
                                <p class="card-text" style="text-align: justify">
                                    @item.Descripcion
                                </p>
                            </div>
                            <div class="row">
                                <div class="col-9">
                                    <div class="input-group mb-3">
                                        <a class="btn btn-primary" data-id="@item.ID">
                                            Editar
                                        </a>
                                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#EliminarComida">
                                            Eliminar
                                        </button>

                                        <input type="number" value="@item.Stock" title="Stock" class="form-control" style="max-width:100px">
                                        <button class="btn btn-secondary">
                                            <i class="fa-solid fa-floppy-disk"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="col mb-3">
                                    <div class="alert alert-success" role="alert">
                                        <p style="text-align: center; height: 5px;">S/. @item.Precio</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            </div>
        }
        else{
            <div class="alert alert-primary mt-5" role="alert">
                No hay elementos a mostrar, ingrese nuevos datos ahora
            </div>
        }


    </div>
</div>


<br>
<br>


<!--navi-->
@if( !(Model.Count() > 0) ){
<div class="container" style="width: 300px;">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item"><a class="page-link" href="#">Previous</a></li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item"><a class="page-link" href="#">Next</a></li>
        </ul>
    </nav>
</div>
}

<!--Eliminar comida-->
<div class="modal fade" id="EliminarComida" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Advertencia</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Deseas eliminar este elemento?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary">Eliminar</button>
            </div>
        </div>
    </div>
</div>

<!--Comida registro y edit-->
<div id="ComidaRegistro">
    @await Html.PartialAsync("_ModificarComida", new Comida());
</div>


@if (!ViewBag.modeloValido)
{
    <script>
        document.getElementById("RegistrarComida").classList.add("show");
    </script>
}

@section Scripts{
    <script>
        var listajax = []; //Lista de indices de las características

        $(document).ready(function () {
            if("@ViewBag.modo" == "Crear"){

                $('#tituloCanvas').text('Agregar comida');
                $('#Modificar').text('Crear');
                $('#Modificar').removeClass('btn-info');
                $('#Modificar').addClass('btn-success');

                $('#agregarCaracteristica').click(AgregarCaracteristicas);
                $('#formulario').on('submit', submitFormAdd);
            }
            else if ("@ViewBag.modo" == "Editar"){
                $('#tituloCanvas').text('Editar comida');
                $('#Modificar').text('Editar');
                $('#Modificar').removeClass('btn-success');
                $('#Modificar').addClass('btn-info');

                $('#agregarCaracteristica').click(AgregarCaracteristicas);
                $('#formulario').on('submit', submitFormEdit);

                //concatenar
                let antlistajax = JSON.parse($('#arrayids').val());
                listajax = listajax.concat(antlistajax);

                $("#RegistrarComida").on("hidden.bs.offcanvas", function () {
                    listajax = []
                });
            }
        });

        //Edit
        $('.btn.btn-primary').click(function () {
            let idcomida = $(this).data("id");

            $.ajax({
                type: 'GET',
                url: '/Comida/_ModificarComida',
                data: { id: idcomida },
                dataType: 'html',
                async: true,
                success: function (result) {
                    $('#ComidaRegistro').html(result);
                    $('#formulario').attr("action", "/Comida/EditarComida");
                    $('#RegistrarComida').offcanvas('show');

                    $('#tituloCanvas').text('Editar comida');
                    $('#Modificar').text('Editar');
                    $('#Modificar').removeClass('btn-success');
                    $('#Modificar').addClass('btn-info');

                    $('#agregarCaracteristica').click(AgregarCaracteristicas);
                    $('.btn.btn-close').on("click", EliminarCaracteristica);
                    $('#formulario').on('submit', submitFormEdit);

                    //concatenar
                    let antlistajax = JSON.parse($('#arrayids').val());
                    listajax = listajax.concat(antlistajax);

                    $("#RegistrarComida").on("hidden.bs.offcanvas", function () {
                        listajax = []
                    });
                }
            });
        });

        //Create
        $('#Create').click(function () {

            $.ajax({
                type: 'GET',
                url: '/Comida/_ModificarComida',
                data: { id: 0 },
                dataType: 'html',
                async: true,
                success: function (result) {
                    $('#ComidaRegistro').html(result);
                    $('#formulario').attr("action", "/Comida/AgregarComida");
                    $('#RegistrarComida').offcanvas('show');

                    $('#tituloCanvas').text('Agregar comida');
                    $('#Modificar').text('Crear');
                    $('#Modificar').removeClass('btn-info');
                    $('#Modificar').addClass('btn-success');

                    $('#agregarCaracteristica').click(AgregarCaracteristicas);
                    $('.btn.btn-close').on("click", EliminarCaracteristica);

                    $('#formulario').on('submit', submitFormAdd);
                }
            });
        });

        function EliminarCaracteristica(){
            let borrar = $(this).closest("li").find('a').data('id');
            listajax = listajax.filter(num => num != borrar);
            $(this).closest("li").remove();
            console.log(listajax);
        }

        function AgregarCaracteristicas(){
            let numero = $('#selectCaracteristica').val();
            if (numero == null) {
                $('#valCaracteristicas').text('Necesita marcar una de las opciones');
                setTimeout(function () {
                    $("#valCaracteristicas").fadeOut();
                }, 1500);
                setTimeout(function () {
                    // Mostrar el elemento nuevamente
                    $('#valCaracteristicas').text('');
                    $("#valCaracteristicas").fadeIn();
                }, 1500);
            }
            else {
                let elementos = $("#listaCaracteristicas").find("li");

                $('#valCaracteristicas').text('');
                let valor = $('#selectCaracteristica').find("option:selected").html();
                let valorRepetido = false;

                listajax.forEach((x) => {
                    if (x == numero) valorRepetido = true
                });


                if (!valorRepetido) {

                    if ($('#listaCaracteristicas').find("li").length < 5) {
                        let li = $('<li class="list-group-item border d-flex"> <p class="p-0 m-0 flex-grow-1 overflow-auto">' + valor + '</p>');
                        let buttonclose = $('<a type="button" class="btn btn-close" data-id="' + numero + '"></a>');
                        buttonclose.on("click", EliminarCaracteristica);

                        li.append(buttonclose);
                        $('#listaCaracteristicas').append(li);

                        listajax.push(parseInt(numero));

                        //pruebas
                        console.log(listajax);
                    }
                    else{
                        $('#valCaracteristicas').text('Solo puedes registrar un máximo de 5 características');
                        setTimeout(function () {
                            $("#valCaracteristicas").fadeOut();
                        }, 1500);
                        setTimeout(function () {
                            $('#valCaracteristicas').text('');
                            $("#valCaracteristicas").fadeIn();
                        }, 1500);
                    }
                }
                else {
                    $('#valCaracteristicas').text('Esta característica ya ha sido registrada');
                    setTimeout(function () {
                        $("#valCaracteristicas").fadeOut();
                    }, 1500);
                    setTimeout(function () {
                        $('#valCaracteristicas').text('');
                        $("#valCaracteristicas").fadeIn();
                    }, 1500);
                }

            }

        }

        function submitFormAdd(evt) {
            //Validar categoria
            let num = $('#selectCategoria').val();

            if ($('#fileimage').val() === "") {
                $('#valImagen').text('No ha seleccionado una imagen');
                evt.preventDefault();
            }
            else{
                $('#valImagen').text('');
            }

            if (num == null) {
                $('#valCategoria').text('Necesita marcar una de las opciones');
                evt.preventDefault();
            }
            else {
                $('#valCategoria').text('');
                $('#arrayids').val(JSON.stringify(listajax)) //Pasar sin ajax
            }

        }
        
        function submitFormEdit(evt){
            //Validar categoria
            let num = $('#selectCategoria').val();

            if ($('#fileimage').val() === "") {
                $('#changeImageval').val('no')
            }

            if (num == null) {
                $('#valCategoria').text('Necesita marcar una de las opciones');
                evt.preventDefault();
            }
            else {
                $('#valCategoria').text('');
                $('#arrayids').val(JSON.stringify(listajax)) //Pasar sin ajax

            }

        }

    </script>
}